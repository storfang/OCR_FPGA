#-----------------------------------------------------------
# Vivado v2017.4 (64-bit)
# SW Build 2086221 on Fri Dec 15 20:55:39 MST 2017
# IP Build 2085800 on Fri Dec 15 22:25:07 MST 2017
# Start of session at: Thu Aug 27 19:02:58 2020
# Process ID: 16360
# Current directory: G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1
# Command line: vivado.exe -log design_ocr_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_ocr_wrapper.tcl -notrace
# Log file: G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1/design_ocr_wrapper.vdi
# Journal file: G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1\vivado.jou
#-----------------------------------------------------------
source design_ocr_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'g:/studia/fpga/project_sdup_ocr/ip_repo/neural_network_1.1'.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'g:/studia/fpga/project_sdup_ocr/ip_repo/neural_network_1.0'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2017.4/data/ip'.
add_files: Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 284.625 ; gain = 39.316
Command: link_design -top design_ocr_wrapper -part xc7z020clg484-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Netlist 29-17] Analyzing 7596 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2017.4
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_processing_system7_0_1/design_ocr_processing_system7_0_1.xdc] for cell 'design_ocr_i/processing_system7_0/inst'
Finished Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_processing_system7_0_1/design_ocr_processing_system7_0_1.xdc] for cell 'design_ocr_i/processing_system7_0/inst'
Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_axi_gpio_0_4/design_ocr_axi_gpio_0_4_board.xdc] for cell 'design_ocr_i/axi_gpio_0/U0'
Finished Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_axi_gpio_0_4/design_ocr_axi_gpio_0_4_board.xdc] for cell 'design_ocr_i/axi_gpio_0/U0'
Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_axi_gpio_0_4/design_ocr_axi_gpio_0_4.xdc] for cell 'design_ocr_i/axi_gpio_0/U0'
Finished Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_axi_gpio_0_4/design_ocr_axi_gpio_0_4.xdc] for cell 'design_ocr_i/axi_gpio_0/U0'
Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_rst_ps7_0_50M_0/design_ocr_rst_ps7_0_50M_0_board.xdc] for cell 'design_ocr_i/rst_ps7_0_50M/U0'
Finished Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_rst_ps7_0_50M_0/design_ocr_rst_ps7_0_50M_0_board.xdc] for cell 'design_ocr_i/rst_ps7_0_50M/U0'
Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_rst_ps7_0_50M_0/design_ocr_rst_ps7_0_50M_0.xdc] for cell 'design_ocr_i/rst_ps7_0_50M/U0'
Finished Parsing XDC File [g:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.srcs/sources_1/bd/design_ocr/ip/design_ocr_rst_ps7_0_50M_0/design_ocr_rst_ps7_0_50M_0.xdc] for cell 'design_ocr_i/rst_ps7_0_50M/U0'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 8 instances were transformed.
  IOBUF => IOBUF (IBUF, OBUFT): 8 instances

11 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:36 ; elapsed = 00:00:40 . Memory (MB): peak = 774.500 ; gain = 489.875
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 775.234 ; gain = 0.734
INFO: [Timing 38-35] Done setting XDC timing constraints.

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 93edd076

Time (s): cpu = 00:00:12 ; elapsed = 00:00:10 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 6 cells and removed 36 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 133345e91

Time (s): cpu = 00:00:15 ; elapsed = 00:00:13 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 11c53c3e9

Time (s): cpu = 00:00:19 ; elapsed = 00:00:17 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 189 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 11c53c3e9

Time (s): cpu = 00:00:22 ; elapsed = 00:00:21 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 11c53c3e9

Time (s): cpu = 00:00:24 ; elapsed = 00:00:23 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.323 . Memory (MB): peak = 1382.688 ; gain = 0.000
Ending Logic Optimization Task | Checksum: deeb13df

Time (s): cpu = 00:00:27 ; elapsed = 00:00:26 . Memory (MB): peak = 1382.688 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
Ending Power Optimization Task | Checksum: 1259800f0

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.321 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
26 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:10 ; elapsed = 00:01:04 . Memory (MB): peak = 1382.688 ; gain = 608.188
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.326 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1/design_ocr_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:29 ; elapsed = 00:00:18 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_ocr_wrapper_drc_opted.rpt -pb design_ocr_wrapper_drc_opted.pb -rpx design_ocr_wrapper_drc_opted.rpx
Command: report_drc -file design_ocr_wrapper_drc_opted.rpt -pb design_ocr_wrapper_drc_opted.pb -rpx design_ocr_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1/design_ocr_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:18 ; elapsed = 00:00:10 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Chipscope 16-241] No debug cores found in the current design.
Before running the implement_debug_core command, either use the Set Up Debug wizard (GUI mode)
or use the create_debug_core and connect_debug_core Tcl commands to insert debug cores into the design.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.112 . Memory (MB): peak = 1382.688 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 66e9e364

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.255 . Memory (MB): peak = 1382.688 ; gain = 0.000
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.112 . Memory (MB): peak = 1382.688 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 8ef9c8dc

Time (s): cpu = 00:00:37 ; elapsed = 00:00:34 . Memory (MB): peak = 1382.688 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: d6471a31

Time (s): cpu = 00:01:23 ; elapsed = 00:01:07 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: d6471a31

Time (s): cpu = 00:01:24 ; elapsed = 00:01:07 . Memory (MB): peak = 1776.711 ; gain = 394.023
Phase 1 Placer Initialization | Checksum: d6471a31

Time (s): cpu = 00:01:24 ; elapsed = 00:01:07 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: 1e0a4efb4

Time (s): cpu = 00:04:07 ; elapsed = 00:02:53 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1e0a4efb4

Time (s): cpu = 00:04:08 ; elapsed = 00:02:54 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 13410c161

Time (s): cpu = 00:04:46 ; elapsed = 00:03:19 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 196dd4be7

Time (s): cpu = 00:04:48 ; elapsed = 00:03:21 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 196dd4be7

Time (s): cpu = 00:04:49 ; elapsed = 00:03:21 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.5 Timing Path Optimizer
Phase 3.5 Timing Path Optimizer | Checksum: 196dd4be7

Time (s): cpu = 00:04:49 ; elapsed = 00:03:22 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.6 Fast Optimization
Phase 3.6 Fast Optimization | Checksum: 17ff2812d

Time (s): cpu = 00:04:54 ; elapsed = 00:03:27 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.7 Small Shape Detail Placement
Phase 3.7 Small Shape Detail Placement | Checksum: 1578e32ac

Time (s): cpu = 00:05:39 ; elapsed = 00:04:12 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.8 Re-assign LUT pins
Phase 3.8 Re-assign LUT pins | Checksum: 11e9d04de

Time (s): cpu = 00:05:45 ; elapsed = 00:04:18 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.9 Pipeline Register Optimization
Phase 3.9 Pipeline Register Optimization | Checksum: 11e9d04de

Time (s): cpu = 00:05:45 ; elapsed = 00:04:19 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 3.10 Fast Optimization
Phase 3.10 Fast Optimization | Checksum: 21239ccd3

Time (s): cpu = 00:06:08 ; elapsed = 00:04:34 . Memory (MB): peak = 1776.711 ; gain = 394.023
Phase 3 Detail Placement | Checksum: 21239ccd3

Time (s): cpu = 00:06:08 ; elapsed = 00:04:34 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 19f8d82ba

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 19f8d82ba

Time (s): cpu = 00:06:52 ; elapsed = 00:05:04 . Memory (MB): peak = 1776.711 ; gain = 394.023
INFO: [Place 30-746] Post Placement Timing Summary WNS=-0.109. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 9dcd1040

Time (s): cpu = 00:08:58 ; elapsed = 00:07:14 . Memory (MB): peak = 1776.711 ; gain = 394.023
Phase 4.1 Post Commit Optimization | Checksum: 9dcd1040

Time (s): cpu = 00:08:58 ; elapsed = 00:07:15 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 9dcd1040

Time (s): cpu = 00:09:00 ; elapsed = 00:07:16 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 9dcd1040

Time (s): cpu = 00:09:00 ; elapsed = 00:07:17 . Memory (MB): peak = 1776.711 ; gain = 394.023

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: cbc4b242

Time (s): cpu = 00:09:01 ; elapsed = 00:07:17 . Memory (MB): peak = 1776.711 ; gain = 394.023
Phase 4 Post Placement Optimization and Clean-Up | Checksum: cbc4b242

Time (s): cpu = 00:09:02 ; elapsed = 00:07:18 . Memory (MB): peak = 1776.711 ; gain = 394.023
Ending Placer Task | Checksum: adaada7a

Time (s): cpu = 00:09:02 ; elapsed = 00:07:18 . Memory (MB): peak = 1776.711 ; gain = 394.023
INFO: [Common 17-83] Releasing license: Implementation
48 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:09:14 ; elapsed = 00:07:28 . Memory (MB): peak = 1776.711 ; gain = 394.023
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:40 ; elapsed = 00:00:14 . Memory (MB): peak = 1776.711 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1/design_ocr_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:46 ; elapsed = 00:00:21 . Memory (MB): peak = 1776.711 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file design_ocr_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.221 . Memory (MB): peak = 1776.711 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_ocr_wrapper_utilization_placed.rpt -pb design_ocr_wrapper_utilization_placed.pb
report_utilization: Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 1776.711 ; gain = 0.000
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_ocr_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.279 . Memory (MB): peak = 1776.711 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 11f1673 ConstDB: 0 ShapeSum: ac8bc407 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 140c930f8

Time (s): cpu = 00:01:16 ; elapsed = 00:00:52 . Memory (MB): peak = 1836.594 ; gain = 39.820
Post Restoration Checksum: NetGraph: cddd7450 NumContArr: 72ebbca8 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 140c930f8

Time (s): cpu = 00:01:19 ; elapsed = 00:00:56 . Memory (MB): peak = 1836.594 ; gain = 39.820

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 140c930f8

Time (s): cpu = 00:01:20 ; elapsed = 00:00:57 . Memory (MB): peak = 1836.594 ; gain = 39.820

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 140c930f8

Time (s): cpu = 00:01:21 ; elapsed = 00:00:57 . Memory (MB): peak = 1836.594 ; gain = 39.820
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 18e4774fa

Time (s): cpu = 00:02:17 ; elapsed = 00:01:32 . Memory (MB): peak = 1906.980 ; gain = 110.207
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.130 | TNS=-0.424 | WHS=-0.190 | THS=-192.580|

Phase 2 Router Initialization | Checksum: e1833d8e

Time (s): cpu = 00:02:41 ; elapsed = 00:01:48 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 21adcb753

Time (s): cpu = 00:03:22 ; elapsed = 00:02:09 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 24883
 Number of Nodes with overlaps = 8106
 Number of Nodes with overlaps = 2883
 Number of Nodes with overlaps = 915
 Number of Nodes with overlaps = 434
 Number of Nodes with overlaps = 154
 Number of Nodes with overlaps = 131
 Number of Nodes with overlaps = 70
 Number of Nodes with overlaps = 21
 Number of Nodes with overlaps = 12
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.607 | TNS=-78.936| WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 87387a08

Time (s): cpu = 00:15:13 ; elapsed = 00:08:59 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 3353
 Number of Nodes with overlaps = 2222
 Number of Nodes with overlaps = 1081
 Number of Nodes with overlaps = 286
 Number of Nodes with overlaps = 90
 Number of Nodes with overlaps = 29
 Number of Nodes with overlaps = 8
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.322 | TNS=-11.418| WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1e523b4dd

Time (s): cpu = 00:20:22 ; elapsed = 00:12:19 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 4.3 Global Iteration 2
 Number of Nodes with overlaps = 2051
 Number of Nodes with overlaps = 1002
Phase 4.3 Global Iteration 2 | Checksum: 16b3be1d5

Time (s): cpu = 00:21:57 ; elapsed = 00:13:20 . Memory (MB): peak = 2179.852 ; gain = 383.078
Phase 4 Rip-up And Reroute | Checksum: 16b3be1d5

Time (s): cpu = 00:21:57 ; elapsed = 00:13:20 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 15d424e79

Time (s): cpu = 00:22:07 ; elapsed = 00:13:26 . Memory (MB): peak = 2179.852 ; gain = 383.078
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.256 | TNS=-4.623 | WHS=N/A    | THS=N/A    |

 Number of Nodes with overlaps = 0
Phase 5.1 Delay CleanUp | Checksum: 18c16600a

Time (s): cpu = 00:22:09 ; elapsed = 00:13:27 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 18c16600a

Time (s): cpu = 00:22:09 ; elapsed = 00:13:28 . Memory (MB): peak = 2179.852 ; gain = 383.078
Phase 5 Delay and Skew Optimization | Checksum: 18c16600a

Time (s): cpu = 00:22:10 ; elapsed = 00:13:28 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1ac8d6fba

Time (s): cpu = 00:22:20 ; elapsed = 00:13:34 . Memory (MB): peak = 2179.852 ; gain = 383.078
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.256 | TNS=-4.344 | WHS=0.011  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 205c930ff

Time (s): cpu = 00:22:20 ; elapsed = 00:13:35 . Memory (MB): peak = 2179.852 ; gain = 383.078
Phase 6 Post Hold Fix | Checksum: 205c930ff

Time (s): cpu = 00:22:21 ; elapsed = 00:13:35 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 28.9588 %
  Global Horizontal Routing Utilization  = 36.4629 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Utilization threshold used for congestion level computation: 0.85
Congestion Report
North Dir 1x1 Area, Max Cong = 99.0991%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X64Y119 -> INT_L_X64Y119
   INT_L_X58Y112 -> INT_L_X58Y112
   INT_R_X55Y107 -> INT_R_X55Y107
   INT_L_X56Y107 -> INT_L_X56Y107
   INT_R_X55Y106 -> INT_R_X55Y106
South Dir 4x4 Area, Max Cong = 85.2477%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X52Y90 -> INT_R_X55Y93
East Dir 4x4 Area, Max Cong = 93.0147%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_FEEDTHRU_2_X121Y107 -> INT_R_X51Y105
   INT_FEEDTHRU_2_X121Y102 -> INT_R_X51Y101
   INT_FEEDTHRU_2_X121Y98 -> INT_R_X51Y97
   INT_L_X56Y94 -> INT_R_X59Y97
   INT_L_X40Y90 -> INT_R_X43Y93
West Dir 4x4 Area, Max Cong = 88.0515%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X56Y114 -> INT_R_X59Y117
   INT_L_X56Y110 -> INT_R_X59Y113
   INT_L_X56Y106 -> INT_R_X59Y109
   INT_L_X40Y90 -> INT_R_X43Y93
   INT_L_X40Y86 -> INT_R_X43Y89
Phase 7 Route finalize | Checksum: 1dd6c76c2

Time (s): cpu = 00:22:22 ; elapsed = 00:13:36 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1dd6c76c2

Time (s): cpu = 00:22:22 ; elapsed = 00:13:36 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1c0d06275

Time (s): cpu = 00:22:33 ; elapsed = 00:13:47 . Memory (MB): peak = 2179.852 ; gain = 383.078

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=-0.256 | TNS=-4.344 | WHS=0.011  | THS=0.000  |

WARNING: [Route 35-328] Router estimated timing not met.
Resolution: For a complete and accurate timing signoff, report_timing_summary must be run after route_design. Alternatively, route_design can be run with the -timing_summary option to enable a complete timing signoff at the end of route_design.
Phase 10 Post Router Timing | Checksum: 1c0d06275

Time (s): cpu = 00:22:33 ; elapsed = 00:13:48 . Memory (MB): peak = 2179.852 ; gain = 383.078
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:22:33 ; elapsed = 00:13:48 . Memory (MB): peak = 2179.852 ; gain = 383.078

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
65 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:22:51 ; elapsed = 00:13:58 . Memory (MB): peak = 2179.852 ; gain = 403.141
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:49 ; elapsed = 00:00:19 . Memory (MB): peak = 2179.852 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1/design_ocr_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:54 ; elapsed = 00:00:24 . Memory (MB): peak = 2179.852 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_ocr_wrapper_drc_routed.rpt -pb design_ocr_wrapper_drc_routed.pb -rpx design_ocr_wrapper_drc_routed.rpx
Command: report_drc -file design_ocr_wrapper_drc_routed.rpt -pb design_ocr_wrapper_drc_routed.pb -rpx design_ocr_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1/design_ocr_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:38 ; elapsed = 00:00:21 . Memory (MB): peak = 2179.852 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file design_ocr_wrapper_methodology_drc_routed.rpt -pb design_ocr_wrapper_methodology_drc_routed.pb -rpx design_ocr_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_ocr_wrapper_methodology_drc_routed.rpt -pb design_ocr_wrapper_methodology_drc_routed.pb -rpx design_ocr_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file G:/studia/fpga/project_sdup_ocr/OCR_FPGA/OCR_FPGA.runs/impl_1/design_ocr_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:01:29 ; elapsed = 00:00:50 . Memory (MB): peak = 2189.559 ; gain = 9.707
INFO: [runtcl-4] Executing : report_power -file design_ocr_wrapper_power_routed.rpt -pb design_ocr_wrapper_power_summary_routed.pb -rpx design_ocr_wrapper_power_routed.rpx
Command: report_power -file design_ocr_wrapper_power_routed.rpt -pb design_ocr_wrapper_power_summary_routed.pb -rpx design_ocr_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
77 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:01:05 ; elapsed = 00:00:41 . Memory (MB): peak = 2260.559 ; gain = 71.000
INFO: [runtcl-4] Executing : report_route_status -file design_ocr_wrapper_route_status.rpt -pb design_ocr_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_ocr_wrapper_timing_summary_routed.rpt -rpx design_ocr_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
CRITICAL WARNING: [Timing 38-282] The design failed to meet the timing requirements. Please see the timing summary report for details on the timing violations.
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_ocr_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-545] No incremental reuse to report, no incremental placement and routing data was found.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_ocr_wrapper_clock_utilization_routed.rpt
report_clock_utilization: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 2279.023 ; gain = 1.266
Command: write_bitstream -force design_ocr_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/temp1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/temp1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/temp1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/ input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0//B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__3 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__4 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__5 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__6 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/ input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1//B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__0 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__1 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__2 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__3 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__4 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__5 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__6 input design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/ output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0//P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__3 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__4 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__5 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__6 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/ output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1//P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__3 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__4 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__5 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__6 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/ output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2//P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__3 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__4 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__5 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__6 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/temp2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/temp2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/temp2__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/temp2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out__1 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out__2 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_2_out output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_2_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_2_out__0 output design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_3/p_2_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
INFO: [Common 17-14] Message 'DRC DPOP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_0/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_1/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_2/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_3/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_4/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_5/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_6/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/p_2_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/temp1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n2_7/temp1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/ multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0//P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__3 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__4 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__5 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__6 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_0/temp2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/ multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1//P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__3 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__4 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__5 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__6 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_1/temp2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/ multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2//P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__0 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__1 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__2 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__3 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__4 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__5 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__6 multiplier stage design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/n3_2/__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDRC-153] Gated clock check: Net design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/z_prev_reg[3]_i_1_n_0 is a gated clock net sourced by a combinational pin design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/z_prev_reg[3]_i_1/O, cell design_ocr_i/neural_network_0/inst/neural_network_v1_1_S00_AXI_inst/network_rtl_int/z_prev_reg[3]_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 601 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_ocr_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
97 Infos, 302 Warnings, 1 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:02:03 ; elapsed = 00:01:25 . Memory (MB): peak = 2779.270 ; gain = 500.246
INFO: [Common 17-206] Exiting Vivado at Thu Aug 27 19:31:08 2020...
